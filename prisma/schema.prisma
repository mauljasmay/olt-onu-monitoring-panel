// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  username      String    @unique
  password      String?
  role          String    @default("admin") // admin, operator, viewer
  isActive      Boolean   @default(true)
  lastLogin     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  accounts Account[]
  sessions Session[]
  
  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model OLT {
  id            String   @id @default(cuid())
  name          String
  ipAddress     String   @unique
  model         String
  status        String   @default("offline") // online, offline, warning
  uptime        Int      @default(0) // in seconds
  cpuUsage      Int      @default(0)
  memoryUsage   Int      @default(0)
  temperature   Int      @default(0)
  onuCount      Int      @default(0)
  activeONU     Int      @default(0)
  lastSeen      DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Configuration settings
  location      String?
  description   String?
  vlanConfig    String?  // JSON string for VLAN configuration
  snmpCommunity String?  @default("public")
  snmpPort      Int      @default(161)
  telnetPort    Int      @default(23)
  sshPort       Int      @default(22)
  webPort       Int      @default(80)
  monitoringInterval Int @default(300) // in seconds
  alertThresholds String? // JSON string for alert thresholds
  
  // GenieACS Integration
  genieacsDeviceId String?  // GenieACS device ID
  genieacsSynced    Boolean @default(false)
  genieacsLastSync  DateTime?
  
  onus          ONU[]
  alerts        Alert[]
  
  @@map("olts")
}

model ONU {
  id            String   @id @default(cuid())
  name          String
  serialNumber  String   @unique
  oltId         String
  port          Int
  status        String   @default("offline") // online, offline, warning
  signalStrength Int     @default(0) // in dBm
  rxPower       Float    @default(0) // in dBm
  txPower       Float    @default(0) // in dBm
  distance      Int      @default(0) // in meters
  uptime        Int      @default(0) // in seconds
  lastSeen      DateTime?
  customerName  String?
  ipAddress     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // GenieACS Integration
  genieacsDeviceId String?  // GenieACS device ID
  genieacsSynced    Boolean @default(false)
  genieacsLastSync  DateTime?
  
  olt           OLT      @relation(fields: [oltId], references: [id], onDelete: Cascade)
  alerts        Alert[]
  
  @@map("onus")
}

model Alert {
  id          String   @id @default(cuid())
  type        String   // critical, warning, info
  title       String
  description String?
  deviceId    String
  deviceType  String   // olt, onu
  status      String   @default("active") // active, resolved, acknowledged
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  olt         OLT?     @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  onu         ONU?     @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  
  @@map("alerts")
}

model MonitoringLog {
  id          String   @id @default(cuid())
  deviceId    String
  deviceType  String   // olt, onu
  metric      String   // cpu, memory, temperature, signal, etc.
  value       Float
  unit        String   // %, Â°C, dBm, etc.
  timestamp   DateTime @default(now())
  
  @@map("monitoring_logs")
}

model GenieACSConfig {
  id          String   @id @default(cuid())
  name        String   @unique
  baseUrl     String
  username    String?
  password    String?  // Stored encrypted
  timeout     Int      @default(30000)
  isActive    Boolean  @default(true)
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Sync settings
  autoSync    Boolean  @default(true)
  syncInterval Int     @default(300) // in seconds
  lastSync    DateTime?
  
  @@map("genieacs_configs")
}

model GenieACSTask {
  id          String   @id @default(cuid())
  taskId      String   // GenieACS task ID
  deviceType  String   // olt, onu
  deviceId    String
  taskType    String   // sync, config, reboot, etc.
  status      String   @default("pending") // pending, completed, failed
  script      String?
  result      String?
  error       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completedAt DateTime?
  
  @@map("genieacs_tasks")
}

model GenieACSParameterThreshold {
  id            String   @id @default(cuid())
  parameterPath String
  deviceType    String   @default("all") // olt, onu, all
  condition     String   // greater_than, less_than, equals, not_equals, contains
  thresholdValue String  // Can be number or string
  severity      String   @default("warning") // info, warning, critical
  enabled       Boolean  @default(true)
  description   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("genieacs_parameter_thresholds")
}

model GenieACSDeviceHealth {
  id                String   @id @default(cuid())
  deviceId          String   @unique
  overallScore      Int      // 0-100
  connectivityScore Int      // 0-100
  performanceScore  Int      // 0-100
  stabilityScore    Int      // 0-100
  lastCalculated    DateTime @default(now())
  factors           String   // JSON string for detailed factors
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@map("genieacs_device_health")
}

model GenieACSFirmwareInfo {
  id               String   @id @default(cuid())
  deviceId         String   @unique
  currentVersion   String
  availableVersion String?
  updateStatus     String   @default("up-to-date") // up-to-date, available, updating, failed
  lastUpdateCheck  DateTime @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  @@map("genieacs_firmware_info")
}

model GenieACSFirmwareHistory {
  id        String   @id @default(cuid())
  deviceId  String
  version   String
  timestamp DateTime @default(now())
  status    String   // success, failed
  duration  Int?     // in seconds
  
  @@map("genieacs_firmware_history")
}

model GenieACSDeviceGroup {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  criteria    String   // JSON string for grouping criteria
  deviceIds   String   // JSON array of device IDs
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("genieacs_device_groups")
}

model GenieACSScheduledTask {
  id          String   @id @default(cuid())
  name        String
  description String?
  taskType    String   // reboot, firmware_update, parameter_set, etc.
  target      String   // device_id, group_id, or "all"
  schedule    String   // Cron expression
  script      String?
  enabled     Boolean  @default(true)
  lastRun     DateTime?
  nextRun     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("genieacs_scheduled_tasks")
}